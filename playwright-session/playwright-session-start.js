module.exports = function(RED) {
    const sessionManager = require('./session-manager');

    function PlaywrightSessionStartNode(config) {
        RED.nodes.createNode(this, config);
        const node = this;
        
        this.on('input', async function(msg) {
            try {
                // URL —Ç–µ–ø–µ—Ä—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω! –ë—Ä–∞—É–∑–µ—Ä —Å–æ–∑–¥–∞–µ—Ç—Å—è –±–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
                // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ "stealth_mode" –∞ –∑–∞—Ç–µ–º "navigate" –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∞–π—Ç–æ–≤
                const url = msg.url || config.url || null;

                node.status({fill:"blue", shape:"dot", text:"–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏..."});
                node.log(`üü¢ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–±–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏)`);
                
                // –û–ø—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
                const browserOptions = msg.browser_options || config.browser_options || {};
                
                // –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –ë–ï–ó –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
                const sessionId = await sessionManager.createSession(url, browserOptions);
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                msg.session_id = sessionId;
                msg.browser_ready = true;
                msg.initial_url = url || null;
                msg.timestamp = new Date().toISOString();
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π payload, –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                if (!msg.payload || typeof msg.payload !== 'object') {
                    msg.payload = {};
                }
                
                Object.assign(msg.payload, {
                    success: true,
                    session_id: sessionId,
                    browser_ready: true,
                    initial_url: url || null,
                    message: '–ë—Ä–∞—É–∑–µ—Ä —Å–æ–∑–¥–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ stealth_mode ‚Üí navigate –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–µ—Ä—Ñ–∏–Ω–≥–∞',
                    timestamp: new Date().toISOString()
                });

                node.status({fill:"green", shape:"dot", text:`–°–µ—Å—Å–∏—è: ${sessionId.substring(0, 12)}...`});
                node.log(`‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${sessionId}`);
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–µ—Ä–≤—ã–π –≤—ã—Ö–æ–¥ (—É—Å–ø–µ—Ö)
                node.send([msg, null]);
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –≤ playwright-session-start:', error);
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                msg.payload = {
                    success: false,
                    error: error.message,
                    node: 'playwright-session-start',
                    timestamp: new Date().toISOString()
                };
                
                node.status({fill:"red", shape:"ring", text:"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è"});
                node.error(error, msg);
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≤—Ç–æ—Ä–æ–π –≤—ã—Ö–æ–¥ (–æ—à–∏–±–∫–∞)
                node.send([null, msg]);
            }
        });
        
        // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–æ–¥—ã
        this.on('close', function() {
            node.log("üü¢ –ù–æ–¥–∞ playwright-session-start –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è");
            node.status({});
        });
    }
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–æ–¥—É –≤ Node-RED
    RED.nodes.registerType("playwright-session-start", PlaywrightSessionStartNode);
}; 